import { UAProxy, ITask, ITaskSolution } from "../capmonster";
export declare class GeeTestTask extends UAProxy {
    constructor(clientKey: string);
    createTask: (websiteUrl: string, gt: string, challenge: string, apiServerSubdomain?: string, getLib?: string) => Promise<number>;
    task: (task: Omit<IGeeTestTaskRequest, "type">) => Omit<IGeeTestTaskRequest, "type">;
    createWithTask: (task: Omit<IGeeTestTaskRequest, "type">) => Promise<number>;
    getTaskResult: (taskId: number) => Promise<IGeeTestTaskResponse | null>;
    joinTaskResult: (taskId: number, timeout?: number) => Promise<IGeeTestTaskResponse>;
}
interface IGeeTestTaskRequest extends ITask {
    type: "GeeTestTask" | "GeeTestTaskProxyless";
    websiteURL: string;
    gt: string;
    challenge: string;
    geetestApiServerSubdomain?: string;
    geetestGetLib?: string;
    cookies?: string;
    noCache?: boolean;
}
interface IGeeTestTaskResponse extends ITaskSolution {
    challenge: string;
    validate: string;
    seccode: string;
}
export {};
//# sourceMappingURL=geetest.d.ts.map