import { CapmonsterClient, ITask, ITaskSolution } from "../capmonster";
export declare class ImageToTextTask extends CapmonsterClient {
    constructor(clientKey: string);
    createTask: (image: string, module?: string, recognizingThreshold?: number, _case?: boolean, numeric?: number, math?: boolean) => Promise<number>;
    task: (task: Omit<IImageToTextTaskRequest, "type">) => Omit<IImageToTextTaskRequest, "type">;
    createWithTask: (task: Omit<IImageToTextTaskRequest, "type">) => Promise<number>;
    getTaskResult: (taskId: number) => Promise<IImageToTextTaskResponse | null>;
    joinTaskResult: (taskId: number, timeout?: number) => Promise<IImageToTextTaskResponse>;
    prepareImageFromLocal: (path: string) => Promise<string>;
    prepareImageFromLink: (url: string) => Promise<string>;
}
interface IImageToTextTaskRequest extends ITask {
    type: "ImageToTextTask";
    body: string;
    CapMonsterModule?: string;
    recognizingThreshold?: number;
    Case?: boolean;
    numeric?: number;
    math?: boolean;
}
interface IImageToTextTaskResponse extends ITaskSolution {
    text: string;
}
export {};
//# sourceMappingURL=image_to_text.d.ts.map