import { UAProxy, ITask, ITaskSolution } from "../capmonster";
export declare class TurnstileTask extends UAProxy {
    constructor(clientKey: string);
    createTask: (websiteURL: string, websiteKey: string) => Promise<number>;
    task: (task: Omit<ITurnstileTaskRequest, "type">) => Omit<ITurnstileTaskRequest, "type">;
    createWithTask: (task: Omit<ITurnstileTaskRequest, "type">) => Promise<number>;
    getTaskResult: (taskId: number) => Promise<ITurnstileTaskResponse | null>;
    joinTaskResult: (taskId: number, timeout?: number) => Promise<ITurnstileTaskResponse>;
}
interface ITurnstileTaskRequest extends ITask {
    type: "TurnstileTaskProxyless" | "TurnstileTask";
    websiteURL: string;
    websiteKey: string;
}
interface ITurnstileTaskResponse extends ITaskSolution {
    token: string;
}
export {};
//# sourceMappingURL=turnstile.d.ts.map