import { UAProxy, ITask, ITaskSolution } from "../capmonster";
export declare class FuncaptchaTask extends UAProxy {
    constructor(clientKey: string);
    createTask: (websiteUrl: string, websitePublicKey: string, apiJsSubdomain?: string, dataBlob?: string, cookies?: string | Array<unknown> | object, noCache?: boolean) => Promise<number>;
    task: (task: Omit<IFuncaptchaTaskRequest, "type">) => Omit<IFuncaptchaTaskRequest, "type">;
    createWithTask: (task: Omit<IFuncaptchaTaskRequest, "type">) => Promise<number>;
    getTaskResult: (taskId: number) => Promise<IFuncaptchaTaskResponse | null>;
    joinTaskResult: (taskId: number, timeout?: number) => Promise<IFuncaptchaTaskResponse>;
}
interface IFuncaptchaTaskRequest extends ITask {
    type: "FunCaptchaTaskProxyless" | "FunCaptchaTask";
    websiteURL: string;
    funcaptchaApiJSSubdomain?: string;
    websitePublicKey?: string;
    data?: string;
    cookies?: string;
    noCache?: boolean;
}
interface IFuncaptchaTaskResponse extends ITaskSolution {
    token: string;
}
export {};
//# sourceMappingURL=fun_captcha.d.ts.map