"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RecaptchaV3Task = void 0;
const capmonster_1 = require("../capmonster");
class RecaptchaV3Task extends capmonster_1.CapmonsterClient {
    constructor(clientKey) {
        super(clientKey);
    }
    createTask = async (websiteUrl, websiteKey, minimumScore, pageAction, noCache) => {
        console.warn("This function is deprecated, use `task` & `createWithTask` to avoid errors in future versions");
        const data = {
            type: "RecaptchaV3TaskProxyless",
            websiteURL: websiteUrl,
            websiteKey,
            minScore: this.checkScore(minimumScore),
            pageAction,
            noCache,
        };
        return await this._createTask(data);
    };
    task = (task) => task;
    createWithTask = async (task) => {
        const data = {
            type: "RecaptchaV3TaskProxyless",
            ...task,
        };
        return await this._createTask(data);
    };
    getTaskResult = async (taskId) => this._getTaskResult(taskId);
    joinTaskResult = async (taskId, timeout) => this._joinTaskResult(taskId, timeout);
    checkScore = (score) => {
        if (score === undefined)
            return score;
        if (score >= 0.9 || score <= 0.1)
            return 0.3;
        return score;
    };
}
exports.RecaptchaV3Task = RecaptchaV3Task;
